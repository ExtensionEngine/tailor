'use strict';

// ----------------------------------------------------
// Meta inputs
// ----------------------------------------------------

const getInputMeta = () => ({
  type: 'INPUT',
  key: 'inputField',
  label: 'Test input',
  placeholder: 'Click to edit...',
  validate: { rules: { required: false } }
});

const getTextareaMeta = () => ({
  type: 'TEXTAREA',
  key: 'textareaField',
  label: 'Test textarea',
  placeholder: 'Click to edit...',
  validate: { rules: { max: 250 } }
});

const getSelectMeta = () => ({
  type: 'SELECT',
  key: 'selectField',
  label: 'Test select',
  placeholder: 'Select...',
  options: [{
    label: '15min',
    value: 15
  }, {
    label: '30min',
    value: 30
  }, {
    label: '45min',
    value: 45
  }]
});

const getMultiselectMeta = () => ({
  type: 'MULTISELECT',
  key: 'multiselectField',
  label: 'Test multiselect',
  options: [
    { value: 'OPT1', label: 'Option 1' },
    { value: 'OPT2', label: 'Option 2' },
    { value: 'OPT3', label: 'Option 3' }
  ]
});

const getSwitchMeta = () => ({
  type: 'SWITCH',
  key: 'switchField',
  label: 'Test switch'
});

const getCheckboxMeta = () => ({
  type: 'CHECKBOX',
  key: 'checkboxField',
  label: 'Test checkbox',
  description: 'Option selected'
});

const getFileMeta = () => ({
  type: 'FILE',
  key: 'fileField',
  label: 'Test file attachment',
  placeholder: 'Click to upload the image',
  validate: {
    rules: {
      ext: ['jpg', 'jpeg', 'png']
    }
  }
});

const getDatetimeMeta = () => ({
  type: 'DATETIME',
  key: 'datetimeField',
  label: 'Test date selection'
});

const getColorMeta = () => ({
  type: 'COLOR',
  key: 'colorField',
  label: 'Test color selection'
});

const getHtmlMeta = () => ({
  type: 'HTML',
  key: 'htmlField',
  label: 'Test html input'
});

// ----------------------------------------------------
// Activity type definition
// ----------------------------------------------------

const ACTIVITY_TYPE = {
  // Outline
  MODULE: 'MODULE',
  LESSON: 'LESSON',
  PAGE: 'PAGE',
  KNOWLEDGE_CHECK: 'KNOWLEDGE_CHECK',
  // Content containers
  INTRO: 'INTRO',
  CONTENT_SECTION: 'CONTENT_SECTION',
  ASSESSMENT_POOL: 'ASSESSMENT_POOL',
  EXAM: 'EXAM'
};

module.exports = {
  SCHEMAS: [{
    id: 'COURSE',
    name: 'Example Course',
    workflowId: 'EXAMPLE_WORKFLOW',
    structure: [{
      type: 'GOAL',
      label: 'Goal',
      color: '#ff6590',
      rootLevel: true,
      isTrackedInWorkflow: true,
      meta: [{
        key: 'description',
        type: 'INPUT',
        label: 'Description',
        placeholder: 'Click to add...',
        validate: { required: false, max: 23 }
      }],
      contentContainers: ['PAGE'],
      relationships: [{
        type: 'prerequisites',
        label: 'Prerequisites',
        multiple: true,
        searchable: true,
        allowEmpty: true,
        placeholder: 'Click to select',
        allowCircularLinks: false,
        allowInsideLineage: false,
        allowedTypes: ['GOAL']
      }, {
        type: 'replacements',
        label: 'replacements'
      }]
    }],
    contentContainers: [{
      type: 'PAGE',
      label: 'Page',
      multiple: false,
      publishedAs: 'Page',
      required: false
    }]
  }],
  WORKFLOWS: [{
    id: 'EXAMPLE_WORKFLOW',
    dueDateWarningThreshold: { days: 2 },
    statuses: [
      { id: 'TODO', label: 'Todo', color: '#0388a6', default: true },
      { id: 'IN_PROGRESS', label: 'In progress', color: '#0396a6' },
      { id: 'REVIEW', label: 'Review', color: '#48d9d9' },
      { id: 'DONE', label: 'Done', color: '#f24949' }
    ]
  }]
};
